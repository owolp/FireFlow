name: Deployment

on:
  workflow_run:
    workflows:
      - 'assemble'
    branches:
      - '*'
    types:
      - completed

jobs:
  distribution_dev:
    name: Dev App Distribution
    runs-on: ubuntu-latest
    if: ${{ github.workflow_run.conclusion == 'success' }} && ${{ github.event_name == 'push' }} && (${{ github.ref_name == 'develop' }} || ${{ github.ref_name == 'release' }})

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7

      - name: Install Dependencies
        run: gem install bundler && bundle install

      - name: Restore Dev Secrets
        run: |
          echo "dev_signing_key_alias=${{ secrets.DEV_SIGNING_KEY_ALIAS }}" >> secrets.properties
          echo "dev_signing_key_password=${{ secrets.DEV_SIGNING_KEY_PASSWORD }}" >> secrets.properties
          echo "dev_signing_keystore_password=${{ secrets.DEV_SIGNING_KEYSTORE_PASSWORD }}" >> secrets.properties
          echo "${{ secrets.DEV_KEYSTORE }}" > dev.keystore.asc
          gpg --batch --decrypt --output "config/keystore/dev.keystore" --passphrase "${{ secrets.DEV_SIGNING_KEYSTORE_GPG }}" --yes "dev.keystore.asc"

      - name: Publish Dev version to Firebase App Distribution
        run: fastlane distribute_dev appId:"${{ secrets.DEV_FIREBASE_APP_ID }}" group:"${{ secrets.FIREBASE_DISTRIBUTION_GROUPS }}" firebaseToken:"${{ secrets.FIREBASE_CLI_TOKEN }}"

  distribution_play:
    name: Play App Distribution
    runs-on: ubuntu-latest
    if: ${{ github.workflow_run.conclusion == 'success' }} && ${{ github.event_name == 'push' }} && (${{ github.ref_name == 'develop' }} || ${{ github.ref_name == 'release' }})

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7

      - name: Install Dependencies
        run: gem install bundler && bundle install

      - name: Restore Prod Secrets
        run: |
          echo "prod_signing_key_alias=${{ secrets.PROD_SIGNING_KEY_ALIAS }}" >> secrets.properties
          echo "prod_signing_key_password=${{ secrets.PROD_SIGNING_KEY_PASSWORD }}" >> secrets.properties
          echo "prod_signing_keystore_password=${{ secrets.PROD_SIGNING_KEYSTORE_PASSWORD }}" >> secrets.properties
          echo "${{ secrets.PROD_KEYSTORE }}" > prod.keystore.asc
          gpg --batch --decrypt --output "config/keystore/prod.keystore" --passphrase "${{ secrets.PROD_SIGNING_KEYSTORE_GPG }}" --yes "prod.keystore.asc"

      - name: Publish Play version to Firebase App Distribution
        run: fastlane distribute_play appId:"${{ secrets.PLAY_FIREBASE_APP_ID }}" group:"${{ secrets.FIREBASE_DISTRIBUTION_GROUPS }}" firebaseToken:"${{ secrets.FIREBASE_CLI_TOKEN }}"

  distribution_gallery:
    name: Gallery App Distribution
    runs-on: ubuntu-latest
    if: ${{ github.workflow_run.conclusion == 'success' }} && ${{ github.event_name == 'push' }} && (${{ github.ref_name == 'develop' }} || ${{ github.ref_name == 'release' }})

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7

      - name: Install Dependencies
        run: gem install bundler && bundle install

      - name: Restore Prod Secrets
        run: |
          echo "prod_signing_key_alias=${{ secrets.PROD_SIGNING_KEY_ALIAS }}" >> secrets.properties
          echo "prod_signing_key_password=${{ secrets.PROD_SIGNING_KEY_PASSWORD }}" >> secrets.properties
          echo "prod_signing_keystore_password=${{ secrets.PROD_SIGNING_KEYSTORE_PASSWORD }}" >> secrets.properties
          echo "${{ secrets.PROD_KEYSTORE }}" > prod.keystore.asc
          gpg --batch --decrypt --output "config/keystore/prod.keystore" --passphrase "${{ secrets.PROD_SIGNING_KEYSTORE_GPG }}" --yes "prod.keystore.asc"

      - name: Publish Gallery version to Firebase App Distribution
        run: fastlane distribute_gallery appId:"${{ secrets.GALLERY_FIREBASE_APP_ID }}" group:"${{ secrets.FIREBASE_DISTRIBUTION_GROUPS }}" firebaseToken:"${{ secrets.FIREBASE_CLI_TOKEN }}"

  distribution_foss:
    name: FOSS App Distribution
    runs-on: ubuntu-latest
    if: ${{ github.workflow_run.conclusion == 'success' }} && ${{ github.event_name == 'push' }} && (${{ github.ref_name == 'develop' }} || ${{ github.ref_name == 'release' }})

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7

      - name: Install Dependencies
        run: gem install bundler && bundle install

      - name: Restore Prod Secrets
        run: |
          echo "prod_signing_key_alias=${{ secrets.PROD_SIGNING_KEY_ALIAS }}" >> secrets.properties
          echo "prod_signing_key_password=${{ secrets.PROD_SIGNING_KEY_PASSWORD }}" >> secrets.properties
          echo "prod_signing_keystore_password=${{ secrets.PROD_SIGNING_KEYSTORE_PASSWORD }}" >> secrets.properties
          echo "${{ secrets.PROD_KEYSTORE }}" > prod.keystore.asc
          gpg --batch --decrypt --output "config/keystore/prod.keystore" --passphrase "${{ secrets.PROD_SIGNING_KEYSTORE_GPG }}" --yes "prod.keystore.asc"

      - name: Publish FOSS version to Firebase App Distribution
        run: fastlane distribute_foss appId:"${{ secrets.FOSS_FIREBASE_APP_ID }}" group:"${{ secrets.FIREBASE_DISTRIBUTION_GROUPS }}" firebaseToken:"${{ secrets.FIREBASE_CLI_TOKEN }}"